
1. 获取时间
	（1） 格林威治时间1970年1月1日0时0分0秒 （国际化标准时间）
	
	（2） 如果获取时间可以得到从1970年1月1日0时0分0秒到今天的时间毫秒数
		var oDate = new Date();
		oDate.getHours();	// 小时
		oDate.getMinutes();		// 分钟
		oDate.getSeconds();	  // 秒数
		oDate.getTime();	// 毫秒数

2. 电子时钟 （作业）

3. 预解析与作用域
	
	作用域：
		域： 空间、范围、区域
		作用： 读、写
		当全局变量和局部变量名称相同，局部变量值的改变不会影响到全局变量的值
		
	预解析：正式解析代码，之前执行的事情
		（1）找一些关键字 var function
		（2） 当函数和变量重名，只留下一个函数		
		（3） 从上往下执行

	仓库：
		如果是变量  则会在仓库里存储 a = 未定义
		如果是函数  则会在仓库里存储 a = function(){
							console.log(a)
						}
	函数：
		函数内部也是域，也会进行预解析的流程

	script 	全局变量	全局函数
			局部变量	局部函数
		执行：自上而下
		找变量： 由内到外找

	作用域链
		参数本质上是：局部变量

3. canvas 画布
	
	（1）JS中获取画布
	（2）得到上下文
		// 通过ctx 进行绘制图画
		var ctx = canvas.getContext("2d");
	（3）接下来画的东西，都是ctx的方法，属性
		ctx.fillStyle = "plum";	// 填充的颜色
		ctx.fillRect(100,100,30,70);	// 画一个矩形4个值（前两个页面中画的位置（100,100），矩形大小（30,70））；
		
		// 画东西
		ctx.strokeStyle = "skyblue";	// 更改笔触的颜色
		ctx.lineWidth = "4";	// 更改笔触的宽度（有默认宽度）
		ctx.strokeRect(100,30,200,40);	// 画一个矩形笔触，没有填充内部颜色
		
		ctx.beginPath();	// 表示开始绘制路径
		ctx.moveTo(100,100);	// 不绘制点移动到100,100的位置
		ctx.lineTo(400,100);	// 绘制一条线，这条线是从100,100到400,100的一条线
		ctx.closePath();	// 结束，闭合路径；系统会帮我们多绘制一条线，从起点到终点的线
		ctx.stroke();	// 把绘制的所有线添加笔触，显示出来
		ctx.fill();		// 填充
		
	canvas 多种绘制
		

